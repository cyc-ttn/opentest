package opentest

import (
	"errors"

	"github.com/getkin/kin-openapi/openapi3"
)

var (
	ErrResponseMissing       = errors.New("response is missing from test")
	ErrResponseNotFound      = errors.New("response not found in spec")
	ErrResponseUnresolvedRef = errors.New("response has unresolved ref")
)

// Response expected from the route
type Response struct {
	// Status code to be expected
	Status int

	// Content is a map by mime/type to a value.
	Content *Content
}

func (r *Response) Validate(op *openapi3.Operation) error {
	response := op.Responses.Get(r.Status)
	if response == nil {
		return ErrResponseNotFound
	}
	if response.Value == nil {
		if response.Ref == "" {
			return ErrResponseNotFound
		}
		return ErrResponseUnresolvedRef
	}
	if r.Content == nil {
		if response.Value.Content != nil {
			return ErrResponseMissing
		}
		return nil
	}
	return r.Content.Validate(response.Value.Content)
}

func (r *Response) Resolve(d *Definition) error {
	return r.Content.Resolve(d)
}